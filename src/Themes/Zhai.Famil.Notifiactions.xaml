<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Zhai.Famil.Controls.Notifiactions"
                    xmlns:local2="clr-namespace:Zhai.Famil.Controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:Converters="clr-namespace:Zhai.Famil.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Zhai.Famil;component/Themes/Zhai.Famil.Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}" x:Key="Zhai.Famil.Notification.CloseButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <TextBlock Text="&#9932;" FontSize="14" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <local:NotificationTemplateSelector x:Key="NotificationTemplateSelector"/>

    <CornerRadius x:Key="NotificationRadius">4</CornerRadius>

    <ControlTemplate x:Key="NotificationTemplate" TargetType="{x:Type local:Notification}">
        <ControlTemplate.Resources>
            <DataTemplate DataType="{x:Type system:String}" x:Key="DefaultStringTemplate">
                <Border Background="{Binding RelativeSource={RelativeSource AncestorType=local:Notification}, Path=Background}" MinHeight="80">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding}"/>
                </Border>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:NotificationContent}" x:Key="DefaultNotificationTemplate">
                <Border x:Name="Border" Padding="12" MinHeight="80" CornerRadius="{StaticResource NotificationRadius}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <local2:Icon x:Name="Icon" Margin="0,0,12,0" Width="22" Height="22" VerticalAlignment="Top"/>
                        <DockPanel Grid.Column="1" Margin="0 0 8 0">
                            <TextBlock DockPanel.Dock="Top" Text="{Binding Title}" Visibility="{Binding Title, Converter={Converters:NullOrEmptyStringToVisibilityConverter}}" FontWeight="Medium" TextTrimming="CharacterEllipsis" />
                            <TextBlock Text="{Binding Message}" Visibility="{Binding Message, Converter={Converters:NullOrEmptyStringToVisibilityConverter}}" TextWrapping="Wrap" Opacity=".8" Margin="0,0,12,0"/>
                        </DockPanel>
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Type}" Value="Information">
                        <Setter TargetName="Icon" Property="Kind" Value="SymbolCircleInfoOutlined"/>
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource Zhai.Famil.InfoBrush}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Success">
                        <Setter TargetName="Icon" Property="Kind" Value="Select"/>
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource Zhai.Famil.SuccessBrush}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Warning">
                        <Setter TargetName="Icon" Property="Kind" Value="VuesaxOutlineWarning2"/>
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource Zhai.Famil.WarningBrush}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Error">
                        <Setter TargetName="Icon" Property="Kind" Value="VuesaxOutlineForbidden"/>
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource Zhai.Famil.ErrorBrush}"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ControlTemplate.Resources>
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Margin="8,8,0,0">
            <Grid>
                <ContentPresenter/>
                <Button x:Name="PART_CloseButton" Style="{StaticResource Zhai.Famil.Notification.CloseButton}" Margin="12" Foreground="{TemplateBinding Foreground}" Opacity=".8"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="0" To="1" Duration="0:0:.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" To="1" Duration="0:0:.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="local:Notification.NotificationCloseInvoked" >
                <BeginStoryboard>
                    <Storyboard Duration="0:0:.1">
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="1" To="0.1" Duration="0:0:.2"/>
                    </Storyboard>
                </BeginStoryboard>
                <BeginStoryboard>
                    <Storyboard BeginTime="0:0:.2">
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="1" To="0" Duration="0:0:.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:Notification}">
        <!--<Setter Property="Height" Value="100"/>-->
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="350"/>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="Background" Value="#444444"/>-->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template" Value="{StaticResource NotificationTemplate}"/>
        <Setter Property="ContentTemplateSelector" Value="{StaticResource NotificationTemplateSelector}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Opacity=".25"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:NotificationArea}">
        <Setter Property="Margin" Value="0,0,8,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NotificationArea}">
                    <local:ReversibleStackPanel x:Name="PART_Items"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Position" Value="TopLeft">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left"/>
                        </Trigger>
                        <Trigger Property="Position" Value="TopRight">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="Position" Value="BottomLeft">
                            <Setter TargetName="PART_Items" Property="ReverseOrder" Value="True"/>
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left"/>
                        </Trigger>
                        <Trigger Property="Position" Value="BottomRight">
                            <Setter TargetName="PART_Items" Property="ReverseOrder" Value="True"/>
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>