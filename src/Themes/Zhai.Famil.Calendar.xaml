<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Zhai.Famil.Controls"
                    xmlns:Converters="clr-namespace:Zhai.Famil.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Zhai.Famil;component/Themes/Zhai.Famil.Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Zhai.Famil;component/Themes/Zhai.Famil.ButtonBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:CalenderDateDisplay}" x:Key="Zhai.Famil.CalenderDateDisplay">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CalenderDateDisplay}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Vertical"
                                    Margin="0">
                            <TextBlock x:Name="ComponentThreeTextBlock"
                                       Text="{TemplateBinding ComponentThreeContent}"
                                       HorizontalAlignment="Left"
                                       FontSize="13" FontWeight="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=FontWeight}" />
                            <StackPanel x:Name="ComponentOneTwoWrapper" Orientation="Horizontal"
                                        HorizontalAlignment="Left">
                                <TextBlock Text="{TemplateBinding ComponentTwoContent}" Margin="0 0 10 0" FontSize="16" FontWeight="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=FontWeight}"/>
                                <TextBlock Text="{TemplateBinding ComponentOneContent}" FontSize="16" FontWeight="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=FontWeight}"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDayInFirstComponent" Value="True">
                            <Setter TargetName="ComponentThreeTextBlock" Property="Opacity" Value=".56"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ComponentThreeTextBlock" Property="Opacity" Value="1"/>
                            <Setter TargetName="ComponentOneTwoWrapper" Property="Opacity" Value=".56"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.Orientation)}" Value="Horizontal">
                            <Setter TargetName="ComponentOneTwoWrapper" Property="Orientation" Value="Vertical"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CalendarButton}" x:Key="Zhai.Famil.CalendarButton">
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="44" />
        <Setter Property="Height" Value="44" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid>
                        <Rectangle x:Name="TodayBackground" Opacity="0" Height="30"
                                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionBackground)}"
                                   RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}" 
                                   RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}"/>
                        <Rectangle x:Name="SelectedBackground" Opacity="0" Height="30"
                                 Fill="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionBackground)}"
                                 RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}" 
                                 RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}"/>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="HighlightBackground" Opacity="0" Height="30"
                                 Fill="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionBackground)}"
                                 RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}" 
                                 RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}"/>
                        <ContentPresenter x:Name="NormalText"
                                          TextElement.Foreground="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=Foreground}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="5,1,5,1"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="DayButtonFocusVisual" Opacity="0" Visibility="Collapsed" StrokeThickness="1" Height="30"
                                 Stroke="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionBackground)}"
                                 RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}" 
                                 RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="HasSelectedDays" Value="True">
                            <Setter TargetName="NormalText" Property="TextBlock.FontWeight" Value="Normal"/>
                            <Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionForeground)}"/>
                            <Setter TargetName="SelectedBackground" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsInactive" Value="True">
                            <Setter TargetName="NormalText" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="DayButtonFocusVisual" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0"/>
                            <Setter TargetName="NormalText" Property="Opacity" Value=".35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CalendarDayButton}" x:Key="Zhai.Famil.CalendarDayButton">
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid>
                        <Rectangle x:Name="TodayBackground" Opacity="0" StrokeThickness="1" Stroke="{TemplateBinding Foreground}"
                                   Fill="Transparent"
                                   RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}" 
                                   RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}"/>
                        <Rectangle x:Name="SelectedBackground" Opacity="0"
                                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionBackground)}"
                                   RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}" 
                                   RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}"/>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius), Converter={Converters:DoubleToCornerRadiusConverter}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="HighlightBackground" Opacity="0"
                                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionBackground)}"
                                   RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}" 
                                   RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}"/>
                        <ContentPresenter x:Name="NormalText"
                                          TextElement.Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Calendar}, Path=Foreground}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="5,1,5,1"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Rectangle x:Name="DayButtonFocusVisual" Opacity="0" StrokeThickness="1" Visibility="Collapsed"
                                   Fill="Transparent" 
                                   Stroke="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionBackground)}"
                                   RadiusX="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}" 
                                   RadiusY="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius)}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="NormalText" Property="TextBlock.FontWeight" Value="Normal"/>
                            <Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionForeground)}"/>
                            <Setter TargetName="SelectedBackground" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsInactive" Value="True">
                            <Setter TargetName="NormalText" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsToday" Value="True">
                            <Setter TargetName="TodayBackground" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsBlackedOut" Value="True">
                            <Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.SelectionForeground)}"/>
                            <Setter TargetName="NormalText" Property="Opacity" Value="0.38" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="DayButtonFocusVisual" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsBlackedOut"  Value="True">
                <Setter Property="Cursor"  Value="No" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CalendarItem}" x:Key="Zhai.Famil.CalendarItem">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <SineEase x:Key="EasingFunction" EasingMode="EaseOut"/>
                        <CubicEase x:Key="EasingFunctionIn" EasingMode="EaseIn"/>

                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Opacity="0.8"
                                       FontWeight="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=FontWeight}"
                                       FontSize="11"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Margin="0,6,0,6"
                                       Text="{Binding [0]}"/>
                        </DataTemplate>
                    </ControlTemplate.Resources>

                    <Grid x:Name="PART_Root" RenderOptions.ClearTypeHint="Enabled">
                        <Grid.Resources>
                            <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                <Border Width="24" Height="24" BorderThickness="1" Cursor="Hand"
                                            CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius), Converter={Converters:DoubleToCornerRadiusConverter}}" 
                                            BorderBrush="{StaticResource Zhai.Famil.SelectionBrush}" 
                                            Background="{StaticResource Zhai.Famil.SelectionUnActivedBrush}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver" />
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To=".56" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <local:Icon Width="10" Height="10" Kind="ArrowLeft" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                <Border Width="24" Height="24" BorderThickness="1" Cursor="Hand"
                                            CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.ButtonCornerRadius), Converter={Converters:DoubleToCornerRadiusConverter}}" 
                                            BorderBrush="{StaticResource Zhai.Famil.SelectionBrush}" 
                                            Background="{StaticResource Zhai.Famil.SelectionUnActivedBrush}">
                                    <Grid Cursor="Hand">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver"/>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <local:Icon Width="10" Height="10" Kind="ArrowRight" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                <Grid Cursor="Hand">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver" />
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <local:CalenderDateDisplay x:Name="buttonContent" Style="{StaticResource Zhai.Famil.CalenderDateDisplay}"
                                                                       Foreground="{TemplateBinding Foreground}"
                                                                       IsEnabled="{TemplateBinding IsEnabled}">
                                        <local:CalenderDateDisplay.DisplayDate>
                                            <MultiBinding Mode="OneWay" Converter="{Converters:CalendarDateCoalesceConverter}">
                                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Calendar}}" Path="DisplayDate" />
                                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Calendar}}" Path="SelectedDate" />
                                            </MultiBinding>
                                        </local:CalenderDateDisplay.DisplayDate>
                                    </local:CalenderDateDisplay>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>

                        <StackPanel Orientation="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}},Path=(local:CalendarExtension.Orientation)}">
                            <Grid x:Name="HeaderContainer">
                                <Border x:Name="HeaderBorder" Background="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.HeaderBackground)}" />
                                <Button x:Name="PART_HeaderButton"
                                        Foreground="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.HeaderForeground)}"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="4"
                                        Grid.RowSpan="1"
                                        FontWeight="Bold"
                                        Focusable="False"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Template="{StaticResource HeaderButtonTemplate}"
                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=(local:CalendarExtension.IsHeaderVisibled), Converter={Converters:BoolToVisibilityConverter}}"
                                        Height="Auto"
                                        Margin="18 12 18 10" />
                            </Grid>
                            <Grid Margin="0 10 0 4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Button x:Name="PART_PreviousButton" Grid.Column="0" Margin="14 0 0 0" Opacity="1" Style="{StaticResource Zhai.Famil.ButtonBase}"
                                        Focusable="False" HorizontalAlignment="Left" Template="{StaticResource PreviousButtonTemplate}"
                                        Foreground="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=Foreground}"/>
                                <TextBlock x:Name="CurrentDateTextBlock" Grid.Column="1" Margin="8 8 8 8"  FontSize="12"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0, 0.5">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{Converters:CalendarYearMonthConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Calendar}}" Path="DisplayDate"/>
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Calendar}}" Path="Language"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <Button x:Name="PART_NextButton" Grid.Column="2" Margin="0 0 14 0" Opacity="1" Style="{StaticResource Zhai.Famil.ButtonBase}"
                                        Focusable="False" HorizontalAlignment="Right" Template="{StaticResource NextButtonTemplate}"
                                        Foreground="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, Path=Foreground}" />

                                <Grid x:Name="MonthViewWrapperGrid" Grid.Row="1" Grid.ColumnSpan="3" Margin="6 6 6 6"
                                      HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <Border x:Name="PART_MonthViewCopy" RenderTransformOrigin="0, 0.5"
                                                Opacity="0" Margin="4 7 4 3" >
                                        <Border.Background>
                                            <VisualBrush Visual="{Binding ElementName=PART_MonthView}" Stretch="UniformToFill"/>
                                        </Border.Background>
                                        <Border.RenderTransform>
                                            <TranslateTransform X="0"/>
                                        </Border.RenderTransform>
                                    </Border>
                                    <Grid x:Name="PART_MonthView" RenderTransformOrigin="0, 0.5" IsSharedSizeScope="True" Opacity="1">
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0" />
                                        </Grid.RenderTransform>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition SharedSizeGroup="WeekRow" />
                                            <RowDefinition SharedSizeGroup="WeekRow" />
                                            <RowDefinition SharedSizeGroup="WeekRow" />
                                            <RowDefinition SharedSizeGroup="WeekRow" />
                                            <RowDefinition SharedSizeGroup="WeekRow" />
                                            <RowDefinition SharedSizeGroup="WeekRow" />
                                            <RowDefinition SharedSizeGroup="WeekRow" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>

                                <Grid x:Name="YearViewWrapperGrid" Grid.Row="1" Grid.ColumnSpan="3" Margin="6 12 6 6"
                                      HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="Hidden">
                                    <Border x:Name="PART_YearViewCopy" RenderTransformOrigin="0, 0.5" Opacity="0" Margin="2">
                                        <Border.Background>
                                            <VisualBrush Visual="{Binding ElementName=PART_YearView}" Stretch="UniformToFill"/>
                                        </Border.Background>
                                        <Border.RenderTransform>
                                            <TranslateTransform X="0"/>
                                        </Border.RenderTransform>
                                    </Border>
                                    <Grid x:Name="PART_YearView" RenderTransformOrigin="0, 0.5">
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0" />
                                        </Grid.RenderTransform>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter Property="Visibility" TargetName="MonthViewWrapperGrid" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="YearViewWrapperGrid" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter Property="Visibility" TargetName="MonthViewWrapperGrid" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="YearViewWrapperGrid" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}},Path=(local:CalendarExtension.Orientation)}" Value="Horizontal">
                            <Setter TargetName="HeaderContainer" Property="Width" Value="100"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Calendar}" x:Key="Zhai.Famil.Calendar">
        <Setter Property="Background" Value="{StaticResource Zhai.Famil.SelectionActivedBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource Zhai.Famil.SelectionBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource Zhai.Famil.CalendarDayButton}"/>
        <Setter Property="CalendarButtonStyle" Value="{StaticResource Zhai.Famil.CalendarButton}"/>
        <Setter Property="local:CalendarExtension.HeaderBackground" Value="{StaticResource Zhai.Famil.SelectionUnActivedBrush}"/>
        <Setter Property="local:CalendarExtension.HeaderForeground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Foreground}"/>
        <Setter Property="local:CalendarExtension.SelectionBackground" Value="{StaticResource Zhai.Famil.SelectionActivedBrush}"/>
        <Setter Property="local:CalendarExtension.SelectionForeground" Value="{StaticResource Zhai.Famil.HighlightBrush}"/>
        <Setter Property="local:CalendarExtension.Orientation" Value="Vertical"/>
        <Setter Property="local:CalendarExtension.IsHeaderVisibled" Value="True"/>
        <Setter Property="local:CalendarExtension.CornerRadius" Value="0"/>
        <Setter Property="local:CalendarExtension.ButtonCornerRadius" Value="4"/>
        <Setter Property="local:CalendarExtension.IsShadowVisibled" Value="False"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <Border x:Name="PART_CalendarBorder" 
                            CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(local:CalendarExtension.CornerRadius), Converter={Converters:DoubleToCornerRadiusConverter}}" 
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <CalendarItem x:Name="PART_CalendarItem" Style="{StaticResource Zhai.Famil.CalendarItem}"/>
                            <Rectangle x:Name="PART_DisabledVisual" Fill="{StaticResource Zhai.Famil.SelectionUnActivedBrush}"
                                       RadiusY="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(local:CalendarExtension.CornerRadius)}" 
                                       RadiusX="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(local:CalendarExtension.CornerRadius)}" 
                                       Opacity="0.5" Stretch="Fill" Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(local:CalendarExtension.IsShadowVisibled)}" Value="True">
                            <Setter Property="BorderThickness" TargetName="PART_CalendarBorder" Value="0"/>
                            <Setter Property="Effect" Value="{StaticResource Zhai.Famil.FloatingShadowEffect}"/>
                            <Setter Property="Margin" Value="20"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(local:CalendarExtension.Orientation)}" Value="Horizontal">
                            <Setter Property="Width" Value="325"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>