<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Zhai.Famil.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Zhai.Famil;component/Themes/Zhai.Famil.Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Zhai.Famil;component/Themes/Zhai.Famil.ButtonBase.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Zhai.Famil;component/Themes/Zhai.Famil.Icon.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:CheckBox}" x:Key="Zhai.Famil.CheckBox" BasedOn="{StaticResource Zhai.Famil.ButtonBase}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Foreground}"/>
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Size}"/>
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Size}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Opacity" Value="{StaticResource Zhai.Famil.ForegroundOpacity}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CheckBox}">
                    <Border x:Name="PART_Border" Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" VerticalAlignment="Top" HorizontalAlignment="Left"
                            ToolTipService.Placement="Top">
                        <Border.ToolTip>
                            <local:Repeater ItemsSource="{TemplateBinding Validation.Errors}"
                                                    IsHitTestVisible="False">
                                <local:Repeater.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ErrorContent}"/>
                                    </DataTemplate>
                                </local:Repeater.ItemTemplate>
                            </local:Repeater>
                        </Border.ToolTip>
                        <Viewbox Width="{TemplateBinding Size}" Height="{TemplateBinding Size}">
                            <Grid Height="16" Width="16">
                                <Rectangle Fill="{TemplateBinding Background}" RadiusX="{TemplateBinding CornerRadius}" RadiusY="{TemplateBinding CornerRadius}" Opacity="{StaticResource Zhai.Famil.SelectionUnActivedOpacity}"/>
                                <Rectangle Stroke="{TemplateBinding Foreground}" RadiusX="{TemplateBinding CornerRadius}" RadiusY="{TemplateBinding CornerRadius}" StrokeThickness="1.5"/>
                                <local:Icon x:Name="CheckedIcon" Kind="Select"
                                        Width="12" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Rectangle x:Name="CheckedNullIcon" Fill="{TemplateBinding Foreground}" Width="7" Height="7" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
                            </Grid>
                        </Viewbox>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckedIcon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckedIcon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckedNullIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Zhai.Famil.ErrorBrush}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="False">
                            <Setter TargetName="PART_Border" Property="ToolTip" Value="{x:Null}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>