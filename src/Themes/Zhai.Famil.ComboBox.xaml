<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Zhai.Famil.Controls"
                    xmlns:Converters="clr-namespace:Zhai.Famil.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Zhai.Famil;component/Themes/Zhai.Famil.Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Zhai.Famil;component/Themes/Zhai.Famil.TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ComboBoxItem}" x:Key="Zhai.Famil.ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 8"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ComboBox}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ComboBox}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid>
                        <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding (local:TextBoxExtension.CornerRadius), RelativeSource={RelativeSource FindAncestor, AncestorType=local:ComboBox}, Converter={Converters:DoubleToCornerRadiusConverter}}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{StaticResource Zhai.Famil.SelectionHoveredBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".56"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="Zhai.Famil.ComboBox.ToggleBotton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="28" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border"
                                Grid.ColumnSpan="2"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                CornerRadius="{Binding (local:TextBoxExtension.CornerRadius), RelativeSource={RelativeSource FindAncestor, AncestorType=local:ComboBox}, Converter={Converters:DoubleToCornerRadiusConverter}}"
                                Background="Transparent"/>
                        <Border x:Name="ButtonBorder"
                                Grid.Column="1"
                                Margin="1"
                                CornerRadius="{Binding (local:TextBoxExtension.CornerRadius), RelativeSource={RelativeSource FindAncestor, AncestorType=local:ComboBox}, Converter={Converters:DoubleToCornerRadiusConverter}}"
                                BorderThickness="0"
                                Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ComboBox}}"
                                Visibility="Collapsed"/>
                        <local:Icon Grid.Column="1" Kind="ArrowDown" VerticalAlignment="Center" HorizontalAlignment="Center" Width="10" Height="10"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource Zhai.Famil.SelectionHoveredBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="Zhai.Famil.ComboBox.Input">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CaretBrush" Value="{StaticResource Zhai.Famil.SelectionBrush}"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox" >
                    <Grid>
                        <ContentPresenter x:Name="PlaceholderHost"
                                          Content="{Binding Path=(local:TextBoxExtension.Placeholder), RelativeSource={RelativeSource FindAncestor, AncestorType=local:ComboBox}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Opacity="0.5"
                                          IsHitTestVisible="False"
                                          Visibility="Collapsed"/>

                        <local:ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                            Style="{StaticResource Zhai.Famil.TextBox.ScrollViewer}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(local:TextBoxExtension.IsPlaceholderVisibled), RelativeSource={RelativeSource FindAncestor, AncestorType=local:ComboBox}}" Value="True">
                            <Setter TargetName="PlaceholderHost" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ComboBox}" x:Key="Zhai.Famil.ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="{StaticResource Zhai.Famil.SelectionUnActivedBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Zhai.Famil.SelectionBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12 8"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ComboBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource Zhai.Famil.ComboBoxItem}"/>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        <Border x:Name="Border"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding local:TextBoxExtension.CornerRadius, Converter={Converters:DoubleToCornerRadiusConverter}}"/>

                        <Border x:Name="ErrorAlertShadow" Grid.ColumnSpan="2"
                                Style="{StaticResource Zhai.Famil.TextBox.ErrorAlertShadow}"
                                CornerRadius="{TemplateBinding local:TextBoxExtension.CornerRadius, Converter={Converters:DoubleToCornerRadiusConverter}}"/>

                        <DockPanel Grid.Column="0" Margin="{TemplateBinding Padding}">
                            <local:IconButton x:Name="ErrorAlert" DockPanel.Dock="Left" Style="{StaticResource Zhai.Famil.TextBox.ErrorAlert}">
                                <local:IconButton.ToolTip>
                                    <local:Repeater ItemsSource="{TemplateBinding Validation.Errors}"
                                                    IsHitTestVisible="False">
                                        <local:Repeater.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding ErrorContent}"/>
                                            </DataTemplate>
                                        </local:Repeater.ItemTemplate>
                                    </local:Repeater>
                                </local:IconButton.ToolTip>
                            </local:IconButton>
                            <ContentPresenter x:Name="ContentSite" 
                                                  IsHitTestVisible="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox x:Name="PART_EditableTextBox" ContextMenu="{TemplateBinding ContextMenu}"
                                         Style="{StaticResource Zhai.Famil.ComboBox.Input}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                         Foreground="{TemplateBinding Foreground}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Focusable="True">
                            </TextBox>
                        </DockPanel>

                        <ToggleButton x:Name="ToggleButton" Grid.Column="1"
                                      ClickMode="Press" 
                                      Focusable="False"
                                      Foreground="{TemplateBinding Foreground}"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Style="{StaticResource Zhai.Famil.ComboBox.ToggleBotton}"/>

                        <!-- Popup showing items -->
                        <Popup x:Name="PART_Popup"
                               Placement="Bottom"
                               Focusable="False"
                               AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide"
                               CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(local:ShadowExtension.CacheMode)}">
                            <Border x:Name="DropDownBorder" Margin="20"
                                    Effect="{StaticResource Zhai.Famil.FloatingShadowEffect}"
                                    Background="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox}, Path=Foreground, Converter={StaticResource FloatingBackgroundBrushRoundConverter}}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ComboBox}, Path=(local:TextBoxExtension.CornerRadius), Converter={Converters:DoubleToCornerRadiusConverter}}">
                                <Border Background="Transparent" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <local:ScrollViewer SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </local:ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Collapsed"/>
                            <Setter TargetName="ToggleButton" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="ToggleButton" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="ErrorAlert" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ErrorAlertShadow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Zhai.Famil.ErrorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Zhai.Famil.SelectionHoveredBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".56"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>