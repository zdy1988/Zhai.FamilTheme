<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ZhaiFamilyContorls"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ZhaiFamilyContorls;component/Themes/ZhaiFamilyContorls.IconButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="ZhaiFamilyContorls.TransparentWindow.DarkTitleBarBackgroundColorBrush" Color="#2f3339" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="ZhaiFamilyContorls.TransparentWindow.DarkBackgroundColorBrush" Color="#1e1e1e" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="ZhaiFamilyContorls.TransparentWindow.LightTitleBarBackgroundColorBrush" Color="#ebeff8" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="ZhaiFamilyContorls.TransparentWindow.LightBackgroundColorBrush" Color="#fafcff" PresentationOptions:Freeze="True"/>

    <SolidColorBrush x:Key="ZhaiFamilyContorls.TransparentWindow.DarkTitleBarTransparencyBackgroundColorBrush" Color="#702f3339" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="ZhaiFamilyContorls.TransparentWindow.DarkTransparencyBackgroundColorBrush" Color="#701e1e1e" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="ZhaiFamilyContorls.TransparentWindow.LightTitleBarTransparencyBackgroundColorBrush" Color="#70ebeff8" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="ZhaiFamilyContorls.TransparentWindow.LightTransparencyBackgroundColorBrush" Color="#70fafcff" PresentationOptions:Freeze="True"/>

    <DropShadowEffect x:Key="ZhaiFamilyContorls.TransparentWindow.DarkShadowEffect" BlurRadius="15" Color="#000000" Direction="90" ShadowDepth="1"/>
    <DropShadowEffect x:Key="ZhaiFamilyContorls.TransparentWindow.LightShadowEffect" BlurRadius="15" Color="#9d9d9d" Direction="90" ShadowDepth="1"/>

    <Style TargetType="{x:Type local:IconButton}" x:Key="ZhaiFamilyContorls.TitleBar.IconButton" BasedOn="{StaticResource ZhaiFamilyContorls.IconButton}">
        <Setter Property="IconSize" Value="12"/>
    </Style>

    <Style TargetType="{x:Type local:IconButton}" x:Key="ZhaiFamilyContorls.TitleBar.IconButton.CloseButton" BasedOn="{StaticResource ZhaiFamilyContorls.TitleBar.IconButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="{x:Type local:TransparentWindow}" x:Key="ZhaiFamilyContorls.TransparentWindow.Templete">
        <Border x:Name="Layout">
            <Grid>
                <Border x:Name="LayoutShadow" Background="{Binding ElementName=Main, Path=Background}" Margin="12" Effect="{StaticResource ZhaiFamilyContorls.TransparentWindow.DarkShadowEffect}"/>
                <Grid x:Name="LayoutGrid" Margin="12">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition/>
                        <RowDefinition Height="0"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="Main" Grid.Row="1" Grid.Column="1" Background="Transparent" >
                        <ContentPresenter x:Name="MainContent" ClipToBounds="True" Margin="0 36 0 0"/>
                        <DockPanel x:Name="TitleBar" VerticalAlignment="Top" Height="36" Panel.ZIndex="1" Background="Transparent">
                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Visibility="{TemplateBinding TitleBarVisibility}">
                                <Image x:Name="appIcon"
                                       Stretch="UniformToFill"
                                       Margin="12,0,0,0"
                                       Width="16" Height="16"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Source="{Binding Icon, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                <TextBlock x:Name="captionText"
                                   Margin="8,0,0,0"
                                   Text="{TemplateBinding AppName}"
                                   VerticalAlignment="Center"
                                   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                            </StackPanel>
                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                <local:IconButton x:Name="TransparentButton" Style="{StaticResource ZhaiFamilyContorls.TitleBar.IconButton}" ToolTip="启用/禁用透明" Visibility="Collapsed"/>
                                <local:IconButton x:Name="ThemeButton" Style="{StaticResource ZhaiFamilyContorls.TitleBar.IconButton}" ToolTip="日光/暗夜主题" Visibility="Collapsed"/>
                                <local:IconButton x:Name="PinButton" Icon="Pin" Style="{StaticResource ZhaiFamilyContorls.TitleBar.IconButton}" ToolTip="置顶" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5"/>
                                <local:IconButton x:Name="MinimizeButton" Icon="MinusScreen" Style="{StaticResource ZhaiFamilyContorls.TitleBar.IconButton}" ToolTip="最小化" IsTabStop="False"/>
                                <local:IconButton x:Name="MaximizeButton" Icon="FullScreen" Style="{StaticResource ZhaiFamilyContorls.TitleBar.IconButton}" ToolTip="全屏" IsTabStop="False"/>
                                <local:IconButton x:Name="RestoreButton" Icon="RestoreScreen" Style="{StaticResource ZhaiFamilyContorls.TitleBar.IconButton}" Visibility="Collapsed" ToolTip="退出全屏" IsTabStop="False"/>
                                <local:IconButton x:Name="CloseButton" Icon="Close" Style="{StaticResource ZhaiFamilyContorls.TitleBar.IconButton.CloseButton}" ToolTip="关闭" IsTabStop="False"/>
                            </StackPanel>
                            <ContentControl Content="{TemplateBinding TitleBarContent}" Visibility="{TemplateBinding TitleBarVisibility}"/>
                        </DockPanel>
                    </Grid>
                    <Rectangle Name="ResizeTopLeft" Fill="Transparent" Grid.Row="0" Grid.Column="0" Cursor="SizeNWSE" IsHitTestVisible="False"/>
                    <Rectangle Name="ResizeTop" Fill="Transparent" Grid.Row="0" Grid.Column="1" Cursor="SizeNS" IsHitTestVisible="False"/>
                    <Rectangle Name="ResizeTopRight" Fill="Transparent" Grid.Row="0" Grid.Column="2" Cursor="SizeNESW" IsHitTestVisible="False"/>
                    <Rectangle Name="ResizeLeft" Fill="Transparent" Grid.Row="1" Grid.Column="0" Cursor="SizeWE" IsHitTestVisible="False"/>
                    <Rectangle Name="ResizeRight" Fill="Transparent" Grid.Row="1" Grid.Column="2" Cursor="SizeWE"/>
                    <Rectangle Name="ResizeBottomLeft" Fill="Transparent" Grid.Row="2" Grid.Column="0" Cursor="SizeNESW" IsHitTestVisible="False"/>
                    <Rectangle Name="ResizeBottom" Fill="Transparent" Grid.Row="2" Grid.Column="1" Cursor="SizeNS"/>
                    <Rectangle Name="ResizeBottomRight" Fill="Transparent" Grid.Row="2" Grid.Column="2" Cursor="SizeNWSE"/>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="RestoreButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="LayoutGrid" Property="Margin" Value="6"/>
                <Setter TargetName="LayoutShadow" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ResizeTopLeft" Property="IsHitTestVisible" Value="False" />
                <Setter TargetName="ResizeTop" Property="IsHitTestVisible" Value="False" />
                <Setter TargetName="ResizeTopRight" Property="IsHitTestVisible" Value="False" />
                <Setter TargetName="ResizeLeft" Property="IsHitTestVisible" Value="False" />
                <Setter TargetName="ResizeRight" Property="IsHitTestVisible" Value="False" />
                <Setter TargetName="ResizeBottomLeft" Property="IsHitTestVisible" Value="False" />
                <Setter TargetName="ResizeBottom" Property="IsHitTestVisible" Value="False" />
                <Setter TargetName="ResizeBottomRight" Property="IsHitTestVisible" Value="False" />
            </Trigger>
            <Trigger Property="Topmost" Value="True">
                <Setter TargetName="PinButton" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="45"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="PinButton" Property="Foreground" Value="{StaticResource ZhaiFamilyContorls.IconButton.HighlightBrush}"/>
            </Trigger>
            <Trigger Property="Theme" Value="Light">
                <Setter TargetName="LayoutShadow" Property="Effect" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.LightShadowEffect}"/>
                <Setter TargetName="ThemeButton" Property="Icon" Value="Sun"/>
            </Trigger>
            <Trigger Property="Theme" Value="Dark">
                <Setter TargetName="ThemeButton" Property="Icon" Value="Moon"/>
            </Trigger>
            <Trigger Property="IsThemeButtonEnabled" Value="True">
                <Setter TargetName="ThemeButton" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsTransparency" Value="True">
                <Setter TargetName="TransparentButton" Property="Icon" Value="Wind"/>
            </Trigger>
            <Trigger Property="IsTransparency" Value="False">
                <Setter TargetName="TransparentButton" Property="Icon" Value="LigjtSnow"/>
            </Trigger>
            <Trigger Property="IsTransparencyButtonEnabled" Value="True">
                <Setter TargetName="TransparentButton" Property="Visibility" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Theme" Value="Dark"/>
                    <Condition Property="IsTransparency" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Main" Property="Background" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.DarkTransparencyBackgroundColorBrush}"/>
                    <Setter TargetName="TitleBar" Property="Background" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.DarkTitleBarTransparencyBackgroundColorBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Theme" Value="Light"/>
                    <Condition Property="IsTransparency" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Main" Property="Background" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.LightTransparencyBackgroundColorBrush}"/>
                    <Setter TargetName="TitleBar" Property="Background" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.LightTitleBarTransparencyBackgroundColorBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Theme" Value="Dark"/>
                    <Condition Property="IsTransparency" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Main" Property="Background" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.DarkBackgroundColorBrush}"/>
                    <Setter TargetName="TitleBar" Property="Background" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.DarkTitleBarBackgroundColorBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Theme" Value="Light"/>
                    <Condition Property="IsTransparency" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Main" Property="Background" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.LightBackgroundColorBrush}"/>
                    <Setter TargetName="TitleBar" Property="Background" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.LightTitleBarBackgroundColorBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="TitleBarVisibility" Value="Collapsed">
                <Setter TargetName="MainContent" Property="Margin" Value="0"/>
                <Setter TargetName="TitleBar" Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsTopmostButtonEnabled" Value="True">
                <Setter TargetName="PinButton" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="AppName" Value="{x:Null}">
                <Setter TargetName="captionText" Property="Text" Value="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:TransparentWindow}" x:Key="ZhaiFamilyContorls.TransparentWindow">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Foreground" Value="#FFF"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="Template" Value="{StaticResource ZhaiFamilyContorls.TransparentWindow.Templete}"/>
        <Style.Triggers>
            <Trigger Property="Theme" Value="Light">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:TransparentWindow}" BasedOn="{StaticResource ZhaiFamilyContorls.TransparentWindow}"/>

</ResourceDictionary>