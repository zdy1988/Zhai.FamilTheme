<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Zhai.Famil.Controls"
                    xmlns:Converters="clr-namespace:Zhai.Famil.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Zhai.Famil;component/Themes/Zhai.Famil.Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Separator}" x:Key="Zhai.Famil.MenuSeparator">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Height" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Margin" Value="6 6 6 6" />
        <Setter Property="Background" Value="{StaticResource Zhai.Famil.SeparatorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="Zhai.Famil.MenuItem">
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource AncestorType=MenuBase}, Path=(local:MenuExtension.ItemPadding)}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type local:Icon}" >
                            <Setter Property="FrameworkElement.Width" Value="12" />
                            <Setter Property="FrameworkElement.Height" Value="12" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid ClipToBounds="True">
                        <Border x:Name="BackgroundRoot"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource Zhai.Famil.SelectionBrush}"
                                SnapsToDevicePixels="True"
                                Opacity="0"/>
                        <Grid Height="{TemplateBinding Height}" Background="Transparent">
                            <Grid VerticalAlignment="Center" Background="Transparent" Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup"/>
                                    <ColumnDefinition Width="*" SharedSizeGroup="HeaderGroup"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="IconWrapper" Visibility="Visible" Width="28">
                                    <ContentPresenter x:Name="Icon"
                                                      Content="{TemplateBinding Icon}"
                                                      ContentSource="Icon"
                                                      HorizontalAlignment="Left" VerticalAlignment="Center"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                                <Grid x:Name="CheckIconWrapper" Visibility="Collapsed" Width="28">
                                    <local:Icon x:Name="CheckIcon" Kind="Select"
                                                Visibility="Collapsed"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                SnapsToDevicePixels="False"/>
                                </Grid>
                                <Grid Grid.Column="1">
                                    <ContentPresenter x:Name="BoldHeaderPresenter"
                                                          Visibility="Hidden"
                                                          TextBlock.FontWeight="Bold"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          Content="{TemplateBinding Header}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentSource="Header"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="Center"/>
                                    <ContentPresenter x:Name="HeaderPresenter"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          Content="{TemplateBinding Header}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentSource="Header"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="Center"/>
                                </Grid>
                                <Grid x:Name="InputGestureTextWrapper"
                                              Grid.Column="2"
                                              Visibility="Collapsed">
                                    <TextBlock Visibility="{TemplateBinding InputGestureText, Converter={Converters:NullOrEmptyStringToVisibilityConverter}}"
                                               Margin="16 0 0 0" Opacity="{StaticResource Zhai.Famil.ForegroundOpacity}"
                                               VerticalAlignment="Center" HorizontalAlignment="Right"
                                               Text="{TemplateBinding InputGestureText}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                               Foreground="{TemplateBinding Foreground}">
                                        <TextBlock.FontSize>
                                            <MultiBinding Converter="{Converters:MathConverter}" ConverterParameter="x-y">
                                                <MultiBinding.Bindings>
                                                    <Binding RelativeSource="{RelativeSource AncestorType=MenuItem}" Path="FontSize"/>
                                                    <Binding Source="2"/>
                                                </MultiBinding.Bindings>
                                            </MultiBinding>
                                        </TextBlock.FontSize>
                                    </TextBlock>
                                </Grid>
                                <Grid x:Name="SubBlock" Grid.Column="2"
                                      Visibility="Collapsed" Margin="16 0 0 0">
                                    <local:Icon Kind="ArrowRight" Width="9" Height="9"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                SnapsToDevicePixels="False"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="Fade"
                               Placement="Bottom"
                               CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(local:ShadowExtension.CacheMode)}">
                            <Border x:Name="SubMenuBorder"
                                    Effect="{StaticResource Zhai.Famil.FloatingShadowEffect}"
                                    Background="{Binding RelativeSource={RelativeSource AncestorType=MenuBase}, Path=Foreground, Converter={StaticResource FloatingBackgroundBrushRoundConverter}}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=MenuBase}, Path=(local:MenuExtension.SubmenuCornerRadius), Converter={Converters:DoubleToCornerRadiusConverter}}">
                                <Border Background="Transparent">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled" Margin="0 6">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect"
                                                           Fill="{Binding Background, ElementName=SubMenuBorder}"
                                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            Grid.IsSharedSizeScope="True"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            KeyboardNavigation.TabNavigation="Cycle"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region Roles Triggers -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="SubBlock" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Right" />
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter TargetName="InputGestureTextWrapper" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                            <Setter Property="Padding" Value="12 8"/>
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="12 8"/>
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                                <Condition Property="IsSubmenuOpen" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPresenter" Property="TextBlock.FontWeight" Value="Regular"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <!--#endregion-->

                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter TargetName="SubMenuBorder" Property="Margin" Value="5"/>
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="CheckIcon" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter Property="Visibility" TargetName="CheckIconWrapper" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.13"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuBase}" x:Key="Zhai.Famil.Menu">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="local:MenuExtension.SubmenuCornerRadius" Value="0"/>
        <Setter Property="local:MenuExtension.ItemPadding" Value="16 8"/>
        <Setter Property="local:MenuExtension.TopLevelItemPadding" Value="12 8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuBase}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}" BasedOn="{StaticResource Zhai.Famil.MenuSeparator}" />
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource Zhai.Famil.MenuItem}"/>
                    </ControlTemplate.Resources>
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}" x:Key="Zhai.Famil.ContextMenu" BasedOn="{StaticResource Zhai.Famil.Menu}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.Foreground}"/>
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Foreground, Converter={StaticResource FloatingBackgroundBrushRoundConverter}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuBase}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}" BasedOn="{StaticResource Zhai.Famil.MenuSeparator}" />
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource Zhai.Famil.MenuItem}">
                            <Setter Property="MinWidth" Value="120"/>
                            <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=FontWeight}"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(local:ShadowExtension.CacheMode)}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" Margin="3"
                                    CornerRadius="{TemplateBinding local:MenuExtension.SubmenuCornerRadius}" Effect="{StaticResource Zhai.Famil.FloatingShadowEffect}">
                            </Border>

                            <Border Margin="3" Background="Transparent">
                                <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled" Margin="0 6">
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        Grid.IsSharedSizeScope="True"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                        KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="Zhai.Famil.DefaultContextMenu" Style="{StaticResource Zhai.Famil.ContextMenu}">
        <MenuItem Command="Cut">
            <MenuItem.Icon>
                <local:Icon Kind="Cut" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="Copy">
            <MenuItem.Icon>
                <local:Icon Kind="VuesaxOutlineDocumentCopy" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="Paste">
            <MenuItem.Icon>
                <local:Icon Kind="Paste" />
            </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Command="SelectAll">
            <MenuItem.Icon>
                <local:Icon Kind="Finished" />
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

</ResourceDictionary>